# AUTOGENERATED! DO NOT EDIT! File to edit: 01_find_duplicates.ipynb (unless otherwise specified).

__all__ = ['get_image_path', 'load_img_as_array', 'get_hash', 'MAX_IMAGES_PER_PRODUCT', 'GetProcessRowFunc']

# Cell
from fastcore.all import *
import pandas as pd
from PIL import Image
from hashlib import md5

# Cell
def get_image_path(data_path, _id, img_num): return data_path/"images"/f"{_id}_{img_num}.jpg"

# Cell
def load_img_as_array(path): return np.array(Image.open(path))

# Cell
def get_hash(array: np.ndarray): return md5(array.tobytes()).hexdigest()

# Cell
MAX_IMAGES_PER_PRODUCT = 4  # each product has up to 4 images

# Cell
def GetProcessRowFunc(data_path: Path, is_test: bool):
    """Get func to process row of train.csv or test_csv."""
    def _inner(row: pd.Series):
        """Processes single row and returns (image hash, image name, _id, category_id, in_test), for each image in product."""
        processed_row = []
        for img_num in range(MAX_IMAGES_PER_PRODUCT):
            img_path = get_image_path(data_path, row["_id"], img_num)
            try: _hash = get_hash(load_img_as_array(img_path))
            except FileNotFoundError: break  # Processed all product's images
            processed_img = (_hash, img_path.name, row["_id"], row["category_id"] if not is_test else -1, is_test)
            processed_row.append(processed_img)
        return processed_row
    return _inner